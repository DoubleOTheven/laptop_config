set autowrite
color lucius

" show line numbers
set number
set numberwidth=3

" PHP
let g:php_smart_members      = 1
let g:php_alt_properties     = 1
let g:php_show_semicolon     = 1
let g:php_smart_semicolon    = 1
let g:php_folding            = 0
let g:php_html_in_strings    = 1
let g:php_parent_error_close = 1
let g:php_parent_error_open  = 1
let g:php_no_shorttags       = 1

" Syntastic
let g:syntastic_check_on_open=1
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-"]
let g:syntastic_cpp_compiler = 'clang++'
let g:syntastic_cpp_compiler_options = ' -std=c++11 -stdlib=libc++'

" Get C++ syntax from Clang
let g:clang_library_path = '/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/'

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%81v.\+/

" vim-rspec mappings
nnoremap <Leader>t :call RunCurrentSpecFile()<CR>
nnoremap <Leader>s :call RunNearestSpec()<CR>
nnoremap <Leader>l :call RunLastSpec()<CR>

" Commands and mappings
command! Vimrc e ~/.vimrc
command! Vlocal e ~/.vimrc.local
command! Bundles e ~/.vimrc.bundles
command! Blocal e ~/.vimrc.bundles.local

" Key mappings
map               <F8> :BufExplorer<cr>
map               \  :NERDTreeToggle<CR>
map               \| :NERDTreeFind<CR>
nmap     <silent> <F6> :TagbarToggle<CR>

" switch to the last file
nnoremap <leader><leader>l <c-^>

" Visual Block mode is far more useful that Visual mode (so swap the commands)...
nnoremap v <C-V>
nnoremap <C-V> v
vnoremap v <C-V>
vnoremap <C-V> v

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" vim-jsx config: allow jsx in .js files
let g:jsx_ext_required = 0

augroup general
  autocmd!
  au BufWritePost .vimrc source ~/.vimrc "Source .vimrc on write
  au BufWritePost .vimrc.bundles source ~/.vimrc "Source .vimrc.bundles on write

  au BufLeave,FocusLost * silent! wall " Save if focus lost
  au BufRead,BufNewFile jquery.*.js set ft=javascript syntax=jquery
  au BufRead,BufNewFile *.coffee set ft=coffee syntax=coffee
  au BufRead,BufNewFile /etc/nginx/* set ft=nginx
  au BufRead,BufNewFile *.json set ft=json
  au BufNewFile,BufRead *.markdown,*.md,*.mdown,*.mkd,*.mkdn set ft=markdown
  au BufRead,BufNewFile {Capfile,Gemfile,Rakefile,Thorfile,config.ru,.caprc,*.cap,.irbrc,irb_tempfile*} set ft=ruby
  au BufWritePre * silent! :EraseBadWhitespace

  au BufwinEnter bash* set nocursorline

  "Enable spellchecking for Markdown
  autocmd FileType markdown setlocal spell

  "Wrap at 80 characters
  autocmd BufRead,BufNewFile *.md setlocal textwidth=80

  " Automatically wrap at 72 characters and spell check git commit messages
  autocmd FileType gitcommit setlocal textwidth=72
  autocmd FileType gitcommit setlocal spell

  "Allow autocomplete for hyphenated words
  autocmd FileType css,scss,sass setlocal iskeyword+=-

  " Restore cursor position
  au BufReadPost *   if line("'\"") > 1 && line("'\"") <= line("$") |
        \ exe "normal! g`\"" |
        \ endif

  " reload .vimrc after saving
  autocmd BufWritePost $MYVIMRC source $MYVIMRC

augroup END
