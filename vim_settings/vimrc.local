set autowrite

" gui settings
if (&t_Co == 256 || has('gui_running'))
  if ($TERM_PROGRAM == 'iTerm.app')
    colorscheme lucius
  else
    colorscheme desert
    colorscheme lucius
  endif
endif

" show line numbers
set number
set numberwidth=3

" Syntastic
let g:syntastic_check_on_open = 1
let g:syntastic_cpp_compiler = 'clang++'
let g:syntastic_cpp_compiler_options = ' -std=c++11 -stdlib=libc++'
let g:syntastic_html_tidy_ignore_errors = [" proprietary attribute \"ng-"]
let g:syntastic_enable_elixir_checker=1
let g:syntastic_html_tidy_ignore_errors = [
    \  'plain text isn''t allowed in <head> elements',
    \  '<base> escaping malformed URI reference',
    \  'discarding unexpected <body>',
    \  '<script> escaping malformed URI reference',
    \  '</head> isn''t allowed in <body> elements'
    \ ]

" Mustache Handlebars convenient abreviations
let g:mustache_abbreviations = 1

" Get C++ syntax from Clang
let g:clang_library_path = '/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/'

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%81v.\+/

" vim-rspec mappings
nnoremap <Leader>t :call RunCurrentSpecFile()<CR>
nnoremap <Leader>s :call RunNearestSpec()<CR>
nnoremap <Leader>l :call RunLastSpec()<CR>

" Key mappings
map               <F8> :BufExplorer<cr>
map               \  :NERDTreeToggle<CR>
map               \| :NERDTreeFind<CR>
nmap              <silent> <F6> :TagbarToggle<CR>
nnoremap          ; :

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" vim-jsx config: allow jsx in .js files
let g:jsx_ext_required = 0
"
" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

"Line spacing: (default is 2 spaces)
autocmd FileType javascript set sw=4
autocmd FileType javascript set ts=4
autocmd FileType javascript set sts=4

augroup general
  autocmd!
  au BufLeave,FocusLost * silent! wall " Save if focus lost
  au BufWritePre * silent! :EraseBadWhitespace

  au BufwinEnter bash* set nocursorline

  "Enable spellchecking for Markdown
  autocmd FileType markdown setlocal spell

  "Wrap at 80 characters
  autocmd BufRead,BufNewFile *.md setlocal textwidth=80

  " Automatically wrap at 72 characters and spell check git commit messages
  autocmd FileType gitcommit setlocal textwidth=72
  autocmd FileType gitcommit setlocal spell

  "Allow autocomplete for hyphenated words
  autocmd FileType css,scss,sass setlocal iskeyword+=-

  " Restore cursor position
  au BufReadPost *   if line("'\"") > 1 && line("'\"") <= line("$") |
        \ exe "normal! g`\"" |
        \ endif
augroup END
